{"remainingRequest":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\components\\form\\Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\components\\form\\Editor.vue","mtime":1566198667875},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566198635392},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1566198634345},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1566198662963},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566198635392},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1566198662436}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport 'quill/dist/quill.core.css'\nimport 'quill/dist/quill.snow.css'\nimport 'quill/dist/quill.bubble.css'\n\nimport {quillEditor} from 'vue-quill-editor'\nimport fileUtil from './fileUtil';\nexport default {\n  name: \"v-editor\",\n  props: {\n    value: {\n      type: String\n    },\n    /*上传图片的地址*/\n    url: {\n      type: String,\n      default: '/'\n    },\n    /*上传图片的file控件name*/\n    fileName: {\n      type: String,\n      default: 'file'\n    },\n    maxUploadSize:{\n      type:Number,\n      default: 1024 * 1024 * 500\n    },\n    needSignature: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      content: '',\n      editorOption: {\n        modules: {\n          toolbar: '#toolbar'\n        }\n      },\n    }\n  },\n  methods: {\n    onChange() {\n      this.$emit('input', this.content)\n    },\n    /*选择上传图片切换*/\n    async onFileChange(e) {\n      const fileInput = e.target;\n      if (fileInput.files.length === 0) {\n        return\n      }\n      this.editor.focus();\n      if (fileInput.files[0].size > this.maxUploadSize) {\n        this.$alert('图片不能大于500KB', '图片尺寸过大', {\n          confirmButtonText: '确定',\n          type: 'warning',\n        })\n      }\n      let formData = new FormData;\n      let filename = fileInput.files[0].name;\n      let uploadUrl = this.url;\n      // 是否需要签名\n      if(this.needSignature){\n        // 上传到阿里，进行签名，把接收到的url作为签名接口地址\n        const resp = await this.$http.loadData(this.url);\n        // 判断接口返回的签名时间是否超时\n        if (resp.expire < new Date().getTime()) {\n          this.$message.error('请求超时!');\n          return;\n        }\n        // 修改文件名为随机文件名\n        filename = fileUtil.getFileName(filename, resp.dir);\n        // 修改上传文件路径\n        uploadUrl = resp.host;\n        // 准备请求参数\n        formData.append(\"key\", filename);\n        formData.append(\"policy\", resp.policy);\n        formData.append(\"OSSAccessKeyId\", resp.accessId);\n        formData.append(\"success_action_status\", '200');\n        formData.append(\"signature\", resp.signature);\n      }\n      formData.append(this.fileName, fileInput.files[0]);\n      this.$http.post(uploadUrl, formData)\n        .then(resp => {\n          if (resp.status == '200') {\n            const fileUrl = resp.data || uploadUrl + \"/\" + filename;\n            this.editor.insertEmbed(this.editor.getSelection().index, 'image', fileUrl);\n          }\n        }).catch(error => {\n          console.log(error);\n          this.$message.error(\"上传失败，请重试\");\n      })\n    },\n    /*点击上传图片按钮*/\n    imgClick() {\n      if (!this.url) {\n        console.log('no editor uploadUrl');\n        return;\n      }\n      /*内存创建input file*/\n      let input = document.createElement('input');\n      input.type = 'file';\n      input.name = this.fileName;\n      input.accept = 'image/jpeg,image/png,image/jpg,image/gif';\n      input.onchange = this.onFileChange;\n      input.click()\n    }\n  },\n  computed: {\n    editor() {\n      return this.$refs.myTextEditor.quill\n    }\n  },\n  components: {\n    'quilleditor': quillEditor\n  },\n  mounted() {\n    this.content = this.value\n  },\n  watch: {\n    'value'(newVal, oldVal) {\n      if (this.editor) {\n        if (newVal !== this.content) {\n          this.content = newVal\n        }\n      }\n    },\n  }\n}\n\n",{"version":3,"sources":["Editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Editor.vue","sourceRoot":"src/components/form","sourcesContent":["<template>\r\n  <div>\r\n    <quilleditor v-model=\"content\"\r\n                 ref=\"myTextEditor\"\r\n                 :options=\"editorOption\"\r\n                 @change=\"onChange\">\r\n      <div id=\"toolbar\" slot=\"toolbar\">\r\n        <select class=\"ql-size\">\r\n          <option value=\"small\"></option>\r\n          <!-- Note a missing, thus falsy value, is used to reset to default -->\r\n          <option selected></option>\r\n          <option value=\"large\"></option>\r\n          <option value=\"huge\"></option>\r\n        </select>\r\n        <!-- Add subscript and superscript buttons -->\r\n        <span class=\"ql-formats\"><button class=\"ql-script\" value=\"sub\"></button></span>\r\n        <span class=\"ql-formats\"><button class=\"ql-script\" value=\"super\"></button></span>\r\n        <span class=\"ql-formats\"><button type=\"button\" class=\"ql-bold\"></button></span>\r\n        <span class=\"ql-formats\"><button type=\"button\" class=\"ql-italic\"></button></span>\r\n        <span class=\"ql-formats\"><button type=\"button\" class=\"ql-blockquote\"></button></span>\r\n        <span class=\"ql-formats\"><button type=\"button\" class=\"ql-list\" value=\"ordered\"></button></span>\r\n        <span class=\"ql-formats\"><button type=\"button\" class=\"ql-list\" value=\"bullet\"></button></span>\r\n        <span class=\"ql-formats\"><button type=\"button\" class=\"ql-link\"></button></span>\r\n        <span class=\"ql-formats\">\r\n        <button type=\"button\" @click=\"imgClick\" style=\"outline:none\">\r\n        <svg viewBox=\"0 0 18 18\"> <rect class=\"ql-stroke\" height=\"10\" width=\"12\" x=\"3\" y=\"4\"></rect> <circle\r\n          class=\"ql-fill\" cx=\"6\" cy=\"7\" r=\"1\"></circle> <polyline class=\"ql-even ql-fill\"\r\n                                                                  points=\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\"></polyline> </svg>\r\n        </button>\r\n      </span>\r\n        <span class=\"ql-formats\"><button type=\"button\" class=\"ql-video\"></button></span>\r\n      </div>\r\n    </quilleditor>\r\n  </div>\r\n</template>\r\n<script>\r\n  import 'quill/dist/quill.core.css'\r\n  import 'quill/dist/quill.snow.css'\r\n  import 'quill/dist/quill.bubble.css'\r\n\r\n  import {quillEditor} from 'vue-quill-editor'\r\n  import fileUtil from './fileUtil';\r\n  export default {\r\n    name: \"v-editor\",\r\n    props: {\r\n      value: {\r\n        type: String\r\n      },\r\n      /*上传图片的地址*/\r\n      url: {\r\n        type: String,\r\n        default: '/'\r\n      },\r\n      /*上传图片的file控件name*/\r\n      fileName: {\r\n        type: String,\r\n        default: 'file'\r\n      },\r\n      maxUploadSize:{\r\n        type:Number,\r\n        default: 1024 * 1024 * 500\r\n      },\r\n      needSignature: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        content: '',\r\n        editorOption: {\r\n          modules: {\r\n            toolbar: '#toolbar'\r\n          }\r\n        },\r\n      }\r\n    },\r\n    methods: {\r\n      onChange() {\r\n        this.$emit('input', this.content)\r\n      },\r\n      /*选择上传图片切换*/\r\n      async onFileChange(e) {\r\n        const fileInput = e.target;\r\n        if (fileInput.files.length === 0) {\r\n          return\r\n        }\r\n        this.editor.focus();\r\n        if (fileInput.files[0].size > this.maxUploadSize) {\r\n          this.$alert('图片不能大于500KB', '图片尺寸过大', {\r\n            confirmButtonText: '确定',\r\n            type: 'warning',\r\n          })\r\n        }\r\n        let formData = new FormData;\r\n        let filename = fileInput.files[0].name;\r\n        let uploadUrl = this.url;\r\n        // 是否需要签名\r\n        if(this.needSignature){\r\n          // 上传到阿里，进行签名，把接收到的url作为签名接口地址\r\n          const resp = await this.$http.loadData(this.url);\r\n          // 判断接口返回的签名时间是否超时\r\n          if (resp.expire < new Date().getTime()) {\r\n            this.$message.error('请求超时!');\r\n            return;\r\n          }\r\n          // 修改文件名为随机文件名\r\n          filename = fileUtil.getFileName(filename, resp.dir);\r\n          // 修改上传文件路径\r\n          uploadUrl = resp.host;\r\n          // 准备请求参数\r\n          formData.append(\"key\", filename);\r\n          formData.append(\"policy\", resp.policy);\r\n          formData.append(\"OSSAccessKeyId\", resp.accessId);\r\n          formData.append(\"success_action_status\", '200');\r\n          formData.append(\"signature\", resp.signature);\r\n        }\r\n        formData.append(this.fileName, fileInput.files[0]);\r\n        this.$http.post(uploadUrl, formData)\r\n          .then(resp => {\r\n            if (resp.status == '200') {\r\n              const fileUrl = resp.data || uploadUrl + \"/\" + filename;\r\n              this.editor.insertEmbed(this.editor.getSelection().index, 'image', fileUrl);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error);\r\n            this.$message.error(\"上传失败，请重试\");\r\n        })\r\n      },\r\n      /*点击上传图片按钮*/\r\n      imgClick() {\r\n        if (!this.url) {\r\n          console.log('no editor uploadUrl');\r\n          return;\r\n        }\r\n        /*内存创建input file*/\r\n        let input = document.createElement('input');\r\n        input.type = 'file';\r\n        input.name = this.fileName;\r\n        input.accept = 'image/jpeg,image/png,image/jpg,image/gif';\r\n        input.onchange = this.onFileChange;\r\n        input.click()\r\n      }\r\n    },\r\n    computed: {\r\n      editor() {\r\n        return this.$refs.myTextEditor.quill\r\n      }\r\n    },\r\n    components: {\r\n      'quilleditor': quillEditor\r\n    },\r\n    mounted() {\r\n      this.content = this.value\r\n    },\r\n    watch: {\r\n      'value'(newVal, oldVal) {\r\n        if (this.editor) {\r\n          if (newVal !== this.content) {\r\n            this.content = newVal\r\n          }\r\n        }\r\n      },\r\n    }\r\n  }\r\n\r\n</script>\r\n"]}]}