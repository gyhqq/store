{"remainingRequest":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\config\\http.js","dependencies":[{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\config\\http.js","mtime":1566198667885},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566198635392},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1566198634345}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Projects\\\\IDEA\\\\hobby\\\\store\\\\gyhqq-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport config from './config';\naxios.defaults.baseURL = config.api; // 设置axios的基础请求路径\n\naxios.defaults.timeout = 5000; // 设置axios的请求时间\n// axios.interceptors.request.use(function (config) {\n//   // console.log(config);\n//   return config;\n// })\n\naxios.loadData =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(url) {\n    var resp;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(url);\n\n          case 2:\n            resp = _context.sent;\n            return _context.abrupt(\"return\", resp.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nVue.prototype.$http = axios; // 将axios添加到 Vue的原型，这样一切vue实例都可以使用该对象",{"version":3,"sources":["C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\config\\http.js"],"names":["Vue","axios","config","defaults","baseURL","api","timeout","loadData","url","get","resp","data","prototype","$http"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyBF,MAAM,CAACG,GAAhC,C,CAAqC;;AACrCJ,KAAK,CAACE,QAAN,CAAeG,OAAf,GAAyB,IAAzB,C,CAA+B;AAE/B;AACA;AACA;AACA;;AAEAL,KAAK,CAACM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,iBAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIP,KAAK,CAACQ,GAAN,CAAUD,GAAV,CADJ;;AAAA;AACTE,YAAAA,IADS;AAAA,6CAERA,IAAI,CAACC,IAFG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAKAX,GAAG,CAACY,SAAJ,CAAcC,KAAd,GAAsBZ,KAAtB,C,CAA4B","sourcesContent":["import Vue from 'vue'\r\nimport axios from 'axios'\r\nimport config from './config'\r\n\r\naxios.defaults.baseURL = config.api; // 设置axios的基础请求路径\r\naxios.defaults.timeout = 5000; // 设置axios的请求时间\r\n\r\n// axios.interceptors.request.use(function (config) {\r\n//   // console.log(config);\r\n//   return config;\r\n// })\r\n\r\naxios.loadData = async function (url) {\r\n  const resp = await axios.get(url);\r\n  return resp.data;\r\n}\r\n\r\nVue.prototype.$http = axios;// 将axios添加到 Vue的原型，这样一切vue实例都可以使用该对象\r\n\r\n"]}]}