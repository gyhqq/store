{"remainingRequest":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\views\\item\\specification\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\views\\item\\specification\\Index.vue","mtime":1566198667906},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566198635392},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1566198634345},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1566198662963},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566198635392},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1566198662436}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"v-spec\",\n  data: function data() {\n    return {\n      currentNode: {},\n      // 当前被选中的商品分类节点\n      group: {},\n      // 被选中的分组\n      showGroup: true // 是否展示分组\n\n    };\n  },\n  methods: {\n    // 分类点击后的弹窗\n    handleClick: function handleClick(node) {\n      // 判断点击的节点是否是父节点（只有点击到叶子节点才会展示规格）\n      if (!node.isParent) {\n        // 把当前点击的节点记录下来\n        this.currentNode = node; // 显示规格组\n\n        this.showGroup = true; // 记录选中的规格组，默认为空\n\n        this.group = {};\n      }\n    },\n    selectGroup: function selectGroup(group) {\n      // 记录选中的分组\n      this.group = group; // 不再显示分组，而是显示规格参数\n\n      this.showGroup = false;\n    },\n    back: function back() {\n      this.showGroup = true;\n      this.group = {};\n    }\n  },\n  components: {\n    SpecGroup: function SpecGroup() {\n      return import('./SpecGroup.vue');\n    },\n    SpecParam: function SpecParam() {\n      return import('./SpecParam.vue');\n    }\n  },\n  computed: {\n    items: function items() {\n      var items = this.currentNode.path;\n\n      if (this.group.name) {\n        items[3] = this.group.name;\n      } else {\n        items.splice(3, 1);\n      }\n\n      return items.map(function (name) {\n        return {\n          text: name\n        };\n      });\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AACA;AACA,MAAA,KAAA,EAAA,EAFA;AAEA;AACA,MAAA,SAAA,EAAA,IAHA,CAGA;;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,WAFA,uBAEA,IAFA,EAEA;AACA;AACA,UAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA;AACA,aAAA,WAAA,GAAA,IAAA,CAFA,CAGA;;AACA,aAAA,SAAA,GAAA,IAAA,CAJA,CAKA;;AACA,aAAA,KAAA,GAAA,EAAA;AACA;AACA,KAZA;AAaA,IAAA,WAbA,uBAaA,KAbA,EAaA;AACA;AACA,WAAA,KAAA,GAAA,KAAA,CAFA,CAGA;;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAlBA;AAmBA,IAAA,IAnBA,kBAmBA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA;AAtBA,GATA;AAiCA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AAAA,aAAA,OAAA,iBAAA,CAAA;AAAA,KADA;AAEA,IAAA,SAAA,EAAA;AAAA,aAAA,OAAA,iBAAA,CAAA;AAAA;AAFA,GAjCA;AAqCA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,KAAA,GAAA,KAAA,WAAA,CAAA,IAAA;;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,CAAA,CAAA,GAAA,KAAA,KAAA,CAAA,IAAA;AACA,OAFA,MAEA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA;;AACA,aAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AAAA,OAAA,CAAA;AACA;AATA;AArCA,CAAA","sourcesContent":["<template>\r\n  <v-card>\r\n    <v-layout row>\r\n      <!-- 商品分类 -->\r\n      <v-flex xs3>\r\n        <v-card>\r\n          <v-card-title>选择分类，查看规格参数模板：</v-card-title>\r\n          <v-divider/>\r\n          <v-tree url=\"/item/category/of/parent\"\r\n                  @handleClick=\"handleClick\"\r\n          />\r\n        </v-card>\r\n      </v-flex>\r\n      <!-- 规格参数 -->\r\n      <v-flex xs9 class=\"px-1\">\r\n        <v-card class=\"elevation-0\" v-show=\"currentNode.id\">\r\n          <v-card-title v-if=\"!currentNode.path\">\r\n            请先选择一个分类\r\n          </v-card-title>\r\n          <v-breadcrumbs dense v-else :items=\"items\" divider=\">\">\r\n            <template v-slot:item=\"{item}\">\r\n              <span v-if=\"items.length !== 4 || items.findIndex(i => i === item) !==2\" v-text=\"item.text\"></span>\r\n              <a v-else v-text=\"item.text\" @click.prevent=\"back\"></a>\r\n            </template>\r\n          </v-breadcrumbs>\r\n          <v-divider/>\r\n          <v-card-text>\r\n            <spec-group :cid=\"currentNode.id\" v-show=\"showGroup\" @select=\"selectGroup\"/>\r\n            <spec-param :group=\"group\" v-show=\"!showGroup\"/>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-flex>\r\n    </v-layout>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    name: \"v-spec\",\r\n    data() {\r\n      return {\r\n        currentNode: {}, // 当前被选中的商品分类节点\r\n        group: {}, // 被选中的分组\r\n        showGroup: true, // 是否展示分组\r\n      };\r\n    },\r\n    methods: {\r\n      // 分类点击后的弹窗\r\n      handleClick(node) {\r\n        // 判断点击的节点是否是父节点（只有点击到叶子节点才会展示规格）\r\n        if (!node.isParent) {\r\n          // 把当前点击的节点记录下来\r\n          this.currentNode = node;\r\n          // 显示规格组\r\n          this.showGroup = true;\r\n          // 记录选中的规格组，默认为空\r\n          this.group = {};\r\n        }\r\n      },\r\n      selectGroup(group) {\r\n        // 记录选中的分组\r\n        this.group = group;\r\n        // 不再显示分组，而是显示规格参数\r\n        this.showGroup = false;\r\n      },\r\n      back() {\r\n        this.showGroup = true;\r\n        this.group = {};\r\n      }\r\n    },\r\n    components: {\r\n      SpecGroup: () => import('./SpecGroup.vue'),\r\n      SpecParam: () => import('./SpecParam.vue'),\r\n    },\r\n    computed: {\r\n      items() {\r\n        const items = this.currentNode.path;\r\n        if (this.group.name) {\r\n          items[3] = this.group.name;\r\n        } else {\r\n          items.splice(3, 1);\r\n        }\r\n        return items.map(name => ({text: name}));\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/views/item/specification"}]}