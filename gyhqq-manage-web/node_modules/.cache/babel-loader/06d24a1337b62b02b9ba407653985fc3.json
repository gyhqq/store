{"remainingRequest":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\components\\cascader\\Cascader.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\src\\components\\cascader\\Cascader.vue","mtime":1566198667873},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566198635392},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1566198634345},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1566198662963},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566198635392},{"path":"C:\\Projects\\IDEA\\hobby\\store\\gyhqq-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1566198662436}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _getIterator from \"C:\\\\Projects\\\\IDEA\\\\hobby\\\\store\\\\gyhqq-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport _Promise from \"C:\\\\Projects\\\\IDEA\\\\hobby\\\\store\\\\gyhqq-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Cascader } from 'iview';\nimport 'iview/dist/styles/iview.css';\nexport default {\n  name: \"vCascader\",\n  components: {\n    cas: Cascader\n  },\n  props: {\n    value: {},\n    label: {\n      type: String\n    },\n    url: {\n      type: String\n    },\n    itemText: {\n      type: String,\n      default: 'name'\n    },\n    itemValue: {\n      type: String,\n      default: 'id'\n    },\n    children: {\n      type: String,\n      default: 'children'\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    showAllLevels: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    rules: {\n      type: Array\n    }\n  },\n  data: function data() {\n    return {\n      options: [],\n      selected: [],\n      defaultRules: []\n    };\n  },\n  methods: {\n    handleChange: function handleChange(value, selectedData) {\n      // 获取最后一级\n      var option = selectedData[selectedData.length - 1]; // 如果是多选，则默认只保存最后一级选项\n\n      if (this.multiple) {\n        // 将最后一级保存到selected中\n        if (this.selected.findIndex(function (o) {\n          return o.value === option.value;\n        }) < 0) {\n          this.selected.push(option);\n        } // 返回已选中的值\n\n\n        this.$emit(\"input\", this.transfer(this.selected));\n      } else {\n        // 单选，则需要判断是否需要显示所有级别\n        if (this.showAllLevels) {\n          // 显示所有级别,将各级别label进行拼接\n          this.selected = [option.__label]; // 返回id数组\n\n          this.$emit(\"input\", this.transfer(selectedData));\n        } else {\n          // 只显示最后一级\n          this.selected = [option.label]; // 返回\n\n          this.$emit(\"input\", this.transfer([option])[0]);\n        }\n      }\n    },\n    loadOption: function loadOption(item, callback) {\n      // 延迟加载次级选项\n      item.loading = true;\n      this.loadData(item.value).then(function (data) {\n        item.children = data;\n        item.loading = false;\n        callback();\n      }).catch(function () {\n        item.loading = false;\n        callback();\n      });\n    },\n    loadData: function loadData(pid) {\n      var _this = this;\n\n      // 从指定的url地址加载数据，并格式化\n      return new _Promise(function (resolve) {\n        _this.$http.get(_this.url, {\n          params: {\n            pid: pid\n          }\n        }).then(function (resp) {\n          var data = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(resp.data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var d = _step.value;\n              var node = {\n                value: d[_this.itemValue],\n                label: d[_this.itemText]\n              };\n\n              if (d.isParent) {\n                node['children'] = [];\n                node['loading'] = false;\n              }\n\n              data.push(node);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          resolve(data);\n        });\n      });\n    },\n    remove: function remove(item) {\n      this.selected = this.selected.filter(function (o) {\n        return o.value !== item.value;\n      });\n      this.$emit(\"input\", this.transfer(this.selected));\n    },\n    transfer: function transfer(arr) {\n      var _this2 = this;\n\n      return arr.map(function (_ref) {\n        var label = _ref.label,\n            value = _ref.value;\n        var obj = {};\n        obj[_this2.itemText] = label;\n        obj[_this2.itemValue] = value;\n        return obj;\n      });\n    },\n    validate: function validate() {\n      if (this.required) {\n        this.$refs.form.validate();\n      }\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    this.loadData(0).then(function (data) {\n      _this3.options = data;\n    });\n\n    if (this.required) {\n      this.defaultRules.push(function (v) {\n        return v.length > 0 || _this3.label + \"不能为空\";\n      });\n    }\n\n    if (this.rules) {\n      this.rules.forEach(function (r) {\n        return _this3.defaultRules.push(r);\n      });\n    }\n  },\n  watch: {\n    value: {\n      deep: true,\n      handler: function handler(val) {\n        var _this4 = this;\n\n        if (!val) {\n          this.selected = [];\n          return;\n        }\n\n        if (val && this.showAllLevels && !this.multiple) {\n          this.selected = [val.map(function (o) {\n            return o[_this4.itemText];\n          }).join(\"/\")];\n        } else if (this.multiple && val) {\n          this.selected = val.map(function (o) {\n            return {\n              label: o[_this4.itemText],\n              value: o[_this4.itemValue]\n            };\n          });\n        } else {\n          this.selected = [val[this.itemText]];\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["Cascader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <cas :data=\"options\" @on-change=\"handleChange\" :loadData=\"loadOption\" transfer>\r\n    <v-combobox multiple :label=\"label\" chips clearable v-model=\"selected\" :required=\"required\"\r\n      :rules=\"defaultRules\">\r\n      <template v-slot:selection=\"{ item, parent, selected }\">\r\n        <v-chip @click.stop=\"\" v-if=\"multiple\" close @input=\"remove(item)\" small outline color=\"green\">\r\n          {{ item.label}}&nbsp;\r\n        </v-chip>\r\n        <v-chip @click.stop=\"\" v-else small>{{ item}}</v-chip>\r\n      </template>\r\n    </v-combobox>\r\n  </cas>\r\n</template>\r\n\r\n<script>\r\n  import {Cascader} from 'iview'\r\n  import 'iview/dist/styles/iview.css';\r\n\r\n  export default {\r\n    name: \"vCascader\",\r\n    components: {\r\n      cas: Cascader\r\n    },\r\n    props: {\r\n      value: {},\r\n      label: {\r\n        type: String\r\n      },\r\n      url: {\r\n        type: String\r\n      },\r\n      itemText: {\r\n        type: String,\r\n        default: 'name'\r\n      },\r\n      itemValue: {\r\n        type: String,\r\n        default: 'id'\r\n      },\r\n      children: {\r\n        type: String,\r\n        default: 'children'\r\n      },\r\n      multiple: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      showAllLevels: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      required:{\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      rules:{\r\n        type:Array,\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        options: [],\r\n        selected: [],\r\n        defaultRules:[]\r\n      }\r\n    },\r\n    methods: {\r\n      handleChange(value, selectedData) {\r\n        // 获取最后一级\r\n        const option = selectedData[selectedData.length - 1];\r\n        // 如果是多选，则默认只保存最后一级选项\r\n        if (this.multiple) {\r\n          // 将最后一级保存到selected中\r\n          if (this.selected.findIndex(o => o.value === option.value) < 0) {\r\n            this.selected.push(option);\r\n          }\r\n          // 返回已选中的值\r\n          this.$emit(\"input\", this.transfer(this.selected));\r\n        } else {\r\n          // 单选，则需要判断是否需要显示所有级别\r\n          if (this.showAllLevels) {\r\n            // 显示所有级别,将各级别label进行拼接\r\n            this.selected = [option.__label];\r\n            // 返回id数组\r\n            this.$emit(\"input\", this.transfer(selectedData));\r\n          } else {\r\n            // 只显示最后一级\r\n            this.selected = [option.label];\r\n            // 返回\r\n            this.$emit(\"input\", this.transfer([option])[0]);\r\n          }\r\n        }\r\n      },\r\n      loadOption(item, callback) {// 延迟加载次级选项\r\n        item.loading = true;\r\n        this.loadData(item.value).then(data => {\r\n          item.children = data;\r\n          item.loading = false;\r\n          callback();\r\n        }).catch(() => {\r\n          item.loading = false;\r\n          callback();\r\n        })\r\n      },\r\n      loadData(pid) {// 从指定的url地址加载数据，并格式化\r\n        return new Promise((resolve) => {\r\n          this.$http.get(this.url, {\r\n            params: {\r\n              pid: pid\r\n            }\r\n          }).then(resp => {\r\n            const data = [];\r\n            for (let d of resp.data) {\r\n              const node = {\r\n                value: d[this.itemValue],\r\n                label: d[this.itemText]\r\n              }\r\n              if (d.isParent) {\r\n                node['children'] = [];\r\n                node['loading'] = false;\r\n              }\r\n              data.push(node)\r\n            }\r\n            resolve(data);\r\n          })\r\n        })\r\n      },\r\n      remove(item) {\r\n        this.selected = this.selected.filter(o => o.value !== item.value)\r\n        this.$emit(\"input\", this.transfer(this.selected))\r\n      },\r\n      transfer(arr) {\r\n        return arr.map(({label, value}) => {\r\n          const obj = {};\r\n          obj[this.itemText] = label;\r\n          obj[this.itemValue] = value;\r\n          return obj;\r\n        })\r\n      },\r\n      validate(){\r\n        if(this.required){\r\n          this.$refs.form.validate();\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.loadData(0).then(data => {\r\n        this.options = data;\r\n      })\r\n      if(this.required){\r\n        this.defaultRules.push(v => v.length > 0 || this.label + \"不能为空\");\r\n      }\r\n      if(this.rules){\r\n        this.rules.forEach(r => this.defaultRules.push(r));\r\n      }\r\n    },\r\n    watch: {\r\n      value: {\r\n        deep: true,\r\n        handler(val) {\r\n          if(!val){\r\n            this.selected = [];\r\n            return;\r\n          }\r\n          if(val && this.showAllLevels && !this.multiple){\r\n            this.selected = [val.map(o => o[this.itemText]).join(\"/\")]\r\n          } else if (this.multiple && val) {\r\n            this.selected = val.map(o => {\r\n              return {\r\n                label: o[this.itemText],\r\n                value: o[this.itemValue]\r\n              }\r\n            })\r\n          } else{\r\n            this.selected = [val[this.itemText]]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .ivu-cascader-menu-item {\r\n    font-size: 14px;\r\n  }\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/cascader"}]}